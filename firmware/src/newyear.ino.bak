/*

.ooo. .ooo. ..o.. ooooo   .o. .o. .o. ooo
o...o o...o .oo.. ....o   o.o o.o oo. ..o
....o o...o ..o.. ...o.   ..o o.o .o. .o.
...o. o...o ..o.. ..o..   .o. o.o .o. .o.
..o.. o...o ..o.. .o...   o.. o.o .o. o..
.o... o...o ..o.. .o...   o.. o.o .o. o..
ooooo .ooo. .ooo. .o...   ooo .o. ooo o..

*/

byte ny_pattern[][ 7 ] = {
    { 0, 0, 0, 0, 0, 0, 0 },	// header
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },

//    { 1, 0, 0, 0, 0, 1, 0 },	// 2
//    { 1, 1, 0, 0, 0, 0, 1 },
//    { 1, 0, 1, 0, 0, 0, 1 },
//    { 1, 0, 0, 1, 0, 0, 1 },
//    { 1, 0, 0, 0, 1, 1, 0 },

    { 1, 1, 1, 0, 0, 1, 0 },
    { 1, 0, 0, 1, 0, 0, 1 },
    { 1, 0, 0, 0, 1, 1, 0 },

    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },

//    { 0, 1, 1, 1, 1, 1, 0 },	// 0
//    { 1, 0, 0, 0, 0, 0, 1 },
//    { 1, 0, 0, 0, 0, 0, 1 },
//    { 1, 0, 0, 0, 0, 0, 1 },
//    { 0, 1, 1, 1, 1, 1, 0 },

    { 0, 1, 1, 1, 1, 1, 0 },
    { 1, 0, 0, 0, 0, 0, 1 },
    { 0, 1, 1, 1, 1, 1, 0 },

    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },

//    { 0, 0, 0, 0, 0, 0, 0 },	// 1
//    { 1, 0, 0, 0, 0, 1, 0 },
//    { 1, 1, 1, 1, 1, 1, 1 },
//    { 1, 0, 0, 0, 0, 0, 0 },
//    { 0, 0, 0, 0, 0, 0, 0 },

    { 1, 0, 0, 0, 0, 1, 0 },
    { 1, 1, 1, 1, 1, 1, 1 },
    { 1, 0, 0, 0, 0, 0, 0 },

    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },

//    { 0, 0, 0, 0, 0, 0, 1 },	// 7
//    { 1, 1, 1, 0, 0, 0, 1 },
//    { 0, 0, 0, 1, 0, 0, 1 },
//    { 0, 0, 0, 0, 1, 0, 1 },
//    { 0, 0, 0, 0, 0, 1, 1 },

    { 1, 1, 1, 0, 0, 0, 1 },
    { 0, 0, 0, 1, 1, 0, 1 },
    { 0, 0, 0, 0, 0, 1, 1 },

    { 0, 0, 0, 0, 0, 0, 0 },	// footer
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },	
    { 0, 0, 0, 0, 0, 0, 0 }	
};

#define pattern_length (sizeof(ny_pattern)/sizeof(*ny_pattern))

void newyear( void ) {

    static byte start_kleur = 0;
    static byte start_line = 0;
    static unsigned long now = 0;

    fadeall( 100 );
    byte kleur = start_kleur;
    for ( byte col = 0; col < 7; col++ ) {
	for ( byte row = 0; row < 7; row++ ) {
	    byte i = ( 6 - col ) + ( row * 7 );
	    if ( ny_pattern[ col + start_line ][ row ] ) 
		leds[ i ] = ColorFromPalette( RainbowColors_p, kleur, 255, LINEARBLEND );
	//	leds[ i ] = CRGB::White;
	    else
	//	leds[ i ] = CRGB::Black;

	    kleur += 3;
	}
    }
    start_kleur++;

    if ( millis() > now ) {
	start_line++;
	if ( start_line > pattern_length - 7 ) start_line = 0;
	now = millis() + 150;
    }
}

   
